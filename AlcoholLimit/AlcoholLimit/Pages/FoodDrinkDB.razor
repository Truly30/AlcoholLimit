@page "/fooddrink"

@using AlcoholLimit.Data
@inject DrinkDatabase DrinkDatabase

<h1>Drink Database</h1>

<p>asdasdasdasdasdas.</p>

<button class="btn btn-primary" @onclick="Refresh">Refresh</button>
<button class="btn btn-primary" @onclick="AddItem">AddItem</button>
<button class="btn btn-primary" @onclick="DeleteAll">Delete All</button>

@if (drinkItemCache == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Size (ml)</th>
				<th>Alc%</th>
				<th>StandardDrink</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var drinkItem in drinkItemCache)
			{
				<tr>
					<td>@drinkItem.Name</td>
					<td>@drinkItem.Size</td>
					<td>@drinkItem.AlcoholPercent</td>
					<td>@drinkItem.StandardDrink</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	private List<DrinkItem> drinkItemCache;

	protected override async Task OnInitializedAsync()
	{
		drinkItemCache = await DrinkDatabase.GetItemsAsync();
	}

	private void AddItem()
	{
		DrinkItem item = new DrinkItem
		{
			Name = "Sörike",
			Size = 500,
			AlcoholPercent = 4,
			Cost = 20,
			Calories = 20000
		};

		drinkItemCache.Add(item);
		DrinkDatabase.SaveItemAsync(item);
	}

	private async void Refresh()
	{
		await RefreshDrinkItemCache();
	}

	private async void DeleteAll()
	{
		drinkItemCache.Clear();
		DrinkDatabase.DeleteAllItemAsync();
	}

	private async Task RefreshDrinkItemCache()
	{
		drinkItemCache = await DrinkDatabase.GetItemsAsync();
	}
}

