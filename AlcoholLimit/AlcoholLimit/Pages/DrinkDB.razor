@page "/drink"

@using AlcoholLimit.Data
@inject DrinkDatabase DrinkDatabase
<UpperMenu/>
<h1>Drink Database</h1>

@if (isAddItemMode)
{
	<AlcoholLimit.Components.FDRecordForm 
		OnDrinkItemSubmitted="@AddItem"
		OnCanceled="@ToggleAddItem"
	/>
}
else 
{
	<button class="btn btn-primary" @onclick="ToggleAddItem">Add Item</button>
	<button class="btn btn-primary" @onclick="Refresh">Refresh</button>
	<button class="btn btn-primary" @onclick="DeleteAll">Delete All</button>

	@if (drinkItemCache == null)
	{
		<p><em>Loading...</em></p>
	}
	else
	{
		<table class="table">
			<thead>
				<tr>
					<th>Name</th>
					<th>Size (ml)</th>
					<th>Alcohol%</th>
					<th>Pure Alcohol (g)</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var drinkItem in drinkItemCache)
				{
					<tr>
						<td>@drinkItem.Name</td>
						<td>@drinkItem.Size</td>
						<td>@drinkItem.AlcoholPercent</td>
						<td>@drinkItem.PureAlcGram</td>
					</tr>
				}
			</tbody>
		</table>
	}
}


@code {
	private List<DrinkItem> drinkItemCache;
	private bool isAddItemMode = false;

	protected override async Task OnInitializedAsync()
	{
		drinkItemCache = await DrinkDatabase.GetItemsAsync();
	}

	private async Task AddItem(DrinkItem item)
	{
		drinkItemCache.Add(item);
		DrinkDatabase.SaveItemAsync(item);
		isAddItemMode = false;
	}

	private async void Refresh()
	{
		await RefreshDrinkItemCache();
	}

	private async void DeleteAll()
	{
		drinkItemCache.Clear();
		foreach (var item in await DrinkDatabase.GetDefaultItemsAsync())
		{
			drinkItemCache.Add(item);
		}
		DrinkDatabase.DeleteAllItemAsync();
	}

	private async Task RefreshDrinkItemCache()
	{
		drinkItemCache = await DrinkDatabase.GetItemsAsync();
	}

	private void ToggleAddItem()
	{
		isAddItemMode = !isAddItemMode;
	}
}

